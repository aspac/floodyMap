//--------------------------------------------------
// Function returning the coordinate
// of the cities, act as the main caller in html
// @param :     idx ...... 
//              type ..... Type of the enquires 
//                         Longitude or Latitude
// @return                
//--------------------------------------------------

function Main() {

   var pos = [];
   var addresses  = getfoodaddress();


   if (addresses == undefined || addresses.length == 0) {
      alert("No address defined!");
      return;
   }

    for (var i = 0; i < addresses.length; i++) {
        
        currAddress = addresses[i];
        var geocoder = new google.maps.Geocoder();
  
        geocoder.geocode({'address':currAddress}, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    //debug: 
                    //alert(results[0].geometry.location.lat());
                    //var longitude = results[0].geometry.location.lng();

                    pos.push(results[0].geometry.location);
                    if (pos.length == addresses.length) {
                       displayMarkers(pos);
                    }
                }
            });
    }
        
} 

//--------------------------------------------------
// Function that shows the markers on the map
// @param :     coords ...... array type with 
//                            lon, lat element              
// @return                
//--------------------------------------------------

function displayMarkers(coords) {


  
  var restaurant_num = coords.length;

  var zoom=5;
  var epsg="EPSG:4326"

  var opt = {scales: [50000000, 30000000, 10000000, 5000000] };
  
  map = new OpenLayers.Map("mapdiv", opt);
  map.addLayer(new OpenLayers.Layer.OSM());

  var markers = new OpenLayers.Layer.Markers( "Markers" );
  map.addLayer(markers);


 for (var i = 0; i < restaurant_num; i++) {
   var convLonLat = new OpenLayers.LonLat(coords[i].lng(),coords[i].lat())
   .transform( new OpenLayers.Projection(epsg),   map.getProjectionObject());

   markers.addMarker(new OpenLayers.Marker(convLonLat));
  }
   
   map.setCenter(convLonLat, zoom);

}

//--------------------------------------------------
// Function listing the address of restaurant
// as is defined by the user input
// TODO : hook with user triggered input
// @param :     void ...... 
// @return                
//--------------------------------------------------
function getfoodaddress(){

// restaurants in surabaya.. !
var addresses  = ["Kertajaya 210", "Kusuma Bangsa 85", 
"Tidar 3", "Kapas Krampung 238", "Jemursari 84", "Embong Malang I No. 78"];
return addresses;

}